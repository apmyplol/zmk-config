/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*
Keymap ideas:
+ media control: volume +/-, play, pause, open music player
+ linux tty keymap: ctrl + alt + F1/2...
+ add third layer:
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_german.h"

// &caps_word { */
//     continue-list = <UNDERSCORE MINUS>; */
// }; */

&mt {
    tapping-term-ms = <50>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp DE_1 &kp DE_2 &kp DE_3   &kp DE_4   &kp DE_5                     &kp DE_6 &kp DE_7   &kp DE_8    &kp DE_9  &kp DE_0   &kp DE_SS
&kp TAB   &kp DE_Q &kp DE_W &kp DE_E   &kp DE_R   &kp DE_T                     &kp DE_Z &kp DE_U   &kp DE_I    &kp DE_O  &kp DE_P   &kp DE_UDIA
&kp LCTRL &kp DE_A &kp DE_S &kp DE_D   &kp DE_F   &kp DE_G                     &kp DE_H &kp DE_J   &kp DE_K    &kp DE_L  &kp DE_ODIA &kp DE_ADIA
&mt LSHFT CAPS &kp DE_Y &kp DE_X &kp DE_C   &kp DE_V   &kp DE_B &kp C_PP   &kp C_NEXT &kp DE_N &kp DE_M   &kp DE_COMM &kp DE_DOT &kp DE_MINS &mt RSHFT CAPS
                        &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp RET  &mo 2  &kp BSPC &kp RGUI
			>;

		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                    &trans      &trans      &trans          &trans      &trans       &trans
&kp F1      &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                          &kp F7      &kp F8      &kp F9          &kp F10     &kp F11      &kp F12
&kp DE_QUES &kp DE_EXLM      &kp DE_DQUO       &kp DE_CIRC       &kp DE_DLR   &kp DE_PLUS                     &kp DE_AMPR &kp DE_SLSH &kp DE_LPRN     &kp DE_RPRN &kp DE_EQL   &kp DE_ASTR
&trans      &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &kp DE_SECT  &kp DE_PERC  &trans   &trans    &trans      &kp MINUS   &trans          &kp DE_PIPE  &kp DE_BSLS &kp DE_QUOT
                                               &trans            &trans       &trans       &trans   &trans    &trans      &trans      &trans
			>;

		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &trans &trans &trans  &trans  &trans                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&trans    &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &trans      &kp DOWN  &kp UP  &kp RIGHT   &kp LEFT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

		};

    adjust {
    // ------------------------------------------------------------------------------------------------------------
    // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
    // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
    // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
    // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
    //                     |      |      |      |        |  |       |      |       |       |
          bindings = <

    &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                 &trans      &trans    &trans    &trans   &trans    &trans
    &kp GRAVE   &trans         &trans         &trans          &trans        &trans                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
    &trans      &kp N1         &kp N2         &kp N3          &kp N4        &kp N5                       &trans      &kp DOWN  &kp UP  &kp RIGHT   &kp LEFT &trans
    &kp F7      &kp F8         &kp F9         &kp F10         &kp F11       &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                                              &trans          &trans        &trans    &trans   &trans    &trans      &trans    &trans
          >;

    };

	};
};
